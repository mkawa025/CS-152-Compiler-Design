Terminals unused in grammar

   ENUM


Grammar

    0 $accept: program_start $end

    1 program_start: %empty
    2              | function program_start

    3 function: FUNCTION FuncIdent SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    4 declarations: %empty
    5             | declaration SEMICOLON declarations

    6 declaration: identifiers COLON INTEGER
    7            | identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    8 FuncIdent: IDENT

    9 identifiers: ident
   10            | ident COMMA identifiers

   11 ident: IDENT

   12 statements: statement SEMICOLON
   13           | statement SEMICOLON statements

   14 statement: var ASSIGN expression
   15          | IF bool_exp THEN statements ENDIF
   16          | IF bool_exp THEN statements ELSE statements ENDIF
   17          | WHILE bool_exp BEGINLOOP statements ENDLOOP
   18          | DO BEGINLOOP statements ENDLOOP WHILE bool_exp
   19          | FOR vars ASSIGN NUMBER SEMICOLON bool_exp SEMICOLON vars ASSIGN expression BEGINLOOP statements ENDLOOP
   20          | READ vars
   21          | WRITE vars
   22          | CONTINUE
   23          | RETURN expression

   24 bool_exp: relation_and_exp
   25         | relation_and_exp OR bool_exp

   26 relation_and_exp: relation_exp
   27                 | relation_exp AND relation_and_exp

   28 relation_exp: expression comp expression
   29             | NOT expression comp expression
   30             | TRUE
   31             | NOT TRUE
   32             | FALSE
   33             | NOT FALSE
   34             | L_PAREN bool_exp R_PAREN

   35 comp: EQ
   36     | NEQ
   37     | LT
   38     | GT
   39     | LTE
   40     | GTE

   41 expressions: expression
   42            | expression COMMA expressions

   43 expression: multiplicative_expression
   44           | multiplicative_expression ADD expression
   45           | multiplicative_expression SUB expression

   46 multiplicative_expression: term
   47                          | term MULT multiplicative_expression
   48                          | term DIV multiplicative_expression
   49                          | term MOD multiplicative_expression

   50 term: var
   51     | SUB var
   52     | NUMBER
   53     | SUB NUMBER
   54     | L_PAREN expression R_PAREN
   55     | SUB L_PAREN expression R_PAREN
   56     | ident L_PAREN expressions R_PAREN

   57 vars: var
   58     | var COMMA vars

   59 var: ident
   60    | ident L_SQUARE_BRACKET expression R_SQUARE_BRACKET


Terminals, with rules where they appear

$end (0) 0
error (256)
FUNCTION (258) 3
BEGIN_PARAMS (259) 3
END_PARAMS (260) 3
BEGIN_LOCALS (261) 3
END_LOCALS (262) 3
BEGIN_BODY (263) 3
END_BODY (264) 3
INTEGER (265) 6 7
ARRAY (266) 7
ENUM (267)
OF (268) 7
IF (269) 15 16
THEN (270) 15 16
ENDIF (271) 15 16
ELSE (272) 16
FOR (273) 19
WHILE (274) 17 18
DO (275) 18
BEGINLOOP (276) 17 18 19
ENDLOOP (277) 17 18 19
CONTINUE (278) 22
READ (279) 20
WRITE (280) 21
AND (281) 27
OR (282) 25
NOT (283) 29 31 33
TRUE (284) 30 31
FALSE (285) 32 33
RETURN (286) 23
L_PAREN (287) 34 54 55 56
R_PAREN (288) 34 54 55 56
L_SQUARE_BRACKET (289) 7 60
R_SQUARE_BRACKET (290) 7 60
SEMICOLON (291) 3 5 12 13 19
COLON (292) 6 7
COMMA (293) 10 42 58
ASSIGN (294) 14 19
LT (295) 37
LTE (296) 39
GT (297) 38
GTE (298) 40
EQ (299) 35
NEQ (300) 36
ADD (301) 44
SUB (302) 45 51 53 55
MULT (303) 47
DIV (304) 48
MOD (305) 49
IDENT (306) 8 11
NUMBER (307) 7 19 52 53


Nonterminals, with rules where they appear

$accept (53)
    on left: 0
program_start (54)
    on left: 1 2, on right: 0 2
function (55)
    on left: 3, on right: 2
declarations (56)
    on left: 4 5, on right: 3 5
declaration (57)
    on left: 6 7, on right: 5
FuncIdent (58)
    on left: 8, on right: 3
identifiers (59)
    on left: 9 10, on right: 6 7 10
ident (60)
    on left: 11, on right: 9 10 56 59 60
statements (61)
    on left: 12 13, on right: 3 13 15 16 17 18 19
statement (62)
    on left: 14 15 16 17 18 19 20 21 22 23, on right: 12 13
bool_exp (63)
    on left: 24 25, on right: 15 16 17 18 19 25 34
relation_and_exp (64)
    on left: 26 27, on right: 24 25 27
relation_exp (65)
    on left: 28 29 30 31 32 33 34, on right: 26 27
comp (66)
    on left: 35 36 37 38 39 40, on right: 28 29
expressions (67)
    on left: 41 42, on right: 42 56
expression (68)
    on left: 43 44 45, on right: 14 19 23 28 29 41 42 44 45 54 55 60
multiplicative_expression (69)
    on left: 46 47 48 49, on right: 43 44 45 47 48 49
term (70)
    on left: 50 51 52 53 54 55 56, on right: 46 47 48 49
vars (71)
    on left: 57 58, on right: 19 20 21 58
var (72)
    on left: 59 60, on right: 14 50 51 57 58


State 0

    0 $accept: . program_start $end

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 1 (program_start)

    program_start  go to state 2
    function       go to state 3


State 1

    3 function: FUNCTION . FuncIdent SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 4

    FuncIdent  go to state 5


State 2

    0 $accept: program_start . $end

    $end  shift, and go to state 6


State 3

    2 program_start: function . program_start

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 1 (program_start)

    program_start  go to state 7
    function       go to state 3


State 4

    8 FuncIdent: IDENT .

    $default  reduce using rule 8 (FuncIdent)


State 5

    3 function: FUNCTION FuncIdent . SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    SEMICOLON  shift, and go to state 8


State 6

    0 $accept: program_start $end .

    $default  accept


State 7

    2 program_start: function program_start .

    $default  reduce using rule 2 (program_start)


State 8

    3 function: FUNCTION FuncIdent SEMICOLON . BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    BEGIN_PARAMS  shift, and go to state 9


State 9

    3 function: FUNCTION FuncIdent SEMICOLON BEGIN_PARAMS . declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 10

    $default  reduce using rule 4 (declarations)

    declarations  go to state 11
    declaration   go to state 12
    identifiers   go to state 13
    ident         go to state 14


State 10

   11 ident: IDENT .

    $default  reduce using rule 11 (ident)


State 11

    3 function: FUNCTION FuncIdent SEMICOLON BEGIN_PARAMS declarations . END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    END_PARAMS  shift, and go to state 15


State 12

    5 declarations: declaration . SEMICOLON declarations

    SEMICOLON  shift, and go to state 16


State 13

    6 declaration: identifiers . COLON INTEGER
    7            | identifiers . COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    COLON  shift, and go to state 17


State 14

    9 identifiers: ident .
   10            | ident . COMMA identifiers

    COMMA  shift, and go to state 18

    $default  reduce using rule 9 (identifiers)


State 15

    3 function: FUNCTION FuncIdent SEMICOLON BEGIN_PARAMS declarations END_PARAMS . BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    BEGIN_LOCALS  shift, and go to state 19


State 16

    5 declarations: declaration SEMICOLON . declarations

    IDENT  shift, and go to state 10

    $default  reduce using rule 4 (declarations)

    declarations  go to state 20
    declaration   go to state 12
    identifiers   go to state 13
    ident         go to state 14


State 17

    6 declaration: identifiers COLON . INTEGER
    7            | identifiers COLON . ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    INTEGER  shift, and go to state 21
    ARRAY    shift, and go to state 22


State 18

   10 identifiers: ident COMMA . identifiers

    IDENT  shift, and go to state 10

    identifiers  go to state 23
    ident        go to state 14


State 19

    3 function: FUNCTION FuncIdent SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS . declarations END_LOCALS BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 10

    $default  reduce using rule 4 (declarations)

    declarations  go to state 24
    declaration   go to state 12
    identifiers   go to state 13
    ident         go to state 14


State 20

    5 declarations: declaration SEMICOLON declarations .

    $default  reduce using rule 5 (declarations)


State 21

    6 declaration: identifiers COLON INTEGER .

    $default  reduce using rule 6 (declaration)


State 22

    7 declaration: identifiers COLON ARRAY . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    L_SQUARE_BRACKET  shift, and go to state 25


State 23

   10 identifiers: ident COMMA identifiers .

    $default  reduce using rule 10 (identifiers)


State 24

    3 function: FUNCTION FuncIdent SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations . END_LOCALS BEGIN_BODY statements END_BODY

    END_LOCALS  shift, and go to state 26


State 25

    7 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET OF INTEGER

    NUMBER  shift, and go to state 27


State 26

    3 function: FUNCTION FuncIdent SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS . BEGIN_BODY statements END_BODY

    BEGIN_BODY  shift, and go to state 28


State 27

    7 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET OF INTEGER

    R_SQUARE_BRACKET  shift, and go to state 29


State 28

    3 function: FUNCTION FuncIdent SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY . statements END_BODY

    IF        shift, and go to state 30
    FOR       shift, and go to state 31
    WHILE     shift, and go to state 32
    DO        shift, and go to state 33
    CONTINUE  shift, and go to state 34
    READ      shift, and go to state 35
    WRITE     shift, and go to state 36
    RETURN    shift, and go to state 37
    IDENT     shift, and go to state 10

    ident       go to state 38
    statements  go to state 39
    statement   go to state 40
    var         go to state 41


State 29

    7 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . OF INTEGER

    OF  shift, and go to state 42


State 30

   15 statement: IF . bool_exp THEN statements ENDIF
   16          | IF . bool_exp THEN statements ELSE statements ENDIF

    NOT      shift, and go to state 43
    TRUE     shift, and go to state 44
    FALSE    shift, and go to state 45
    L_PAREN  shift, and go to state 46
    SUB      shift, and go to state 47
    IDENT    shift, and go to state 10
    NUMBER   shift, and go to state 48

    ident                      go to state 49
    bool_exp                   go to state 50
    relation_and_exp           go to state 51
    relation_exp               go to state 52
    expression                 go to state 53
    multiplicative_expression  go to state 54
    term                       go to state 55
    var                        go to state 56


State 31

   19 statement: FOR . vars ASSIGN NUMBER SEMICOLON bool_exp SEMICOLON vars ASSIGN expression BEGINLOOP statements ENDLOOP

    IDENT  shift, and go to state 10

    ident  go to state 38
    vars   go to state 57
    var    go to state 58


State 32

   17 statement: WHILE . bool_exp BEGINLOOP statements ENDLOOP

    NOT      shift, and go to state 43
    TRUE     shift, and go to state 44
    FALSE    shift, and go to state 45
    L_PAREN  shift, and go to state 46
    SUB      shift, and go to state 47
    IDENT    shift, and go to state 10
    NUMBER   shift, and go to state 48

    ident                      go to state 49
    bool_exp                   go to state 59
    relation_and_exp           go to state 51
    relation_exp               go to state 52
    expression                 go to state 53
    multiplicative_expression  go to state 54
    term                       go to state 55
    var                        go to state 56


State 33

   18 statement: DO . BEGINLOOP statements ENDLOOP WHILE bool_exp

    BEGINLOOP  shift, and go to state 60


State 34

   22 statement: CONTINUE .

    $default  reduce using rule 22 (statement)


State 35

   20 statement: READ . vars

    IDENT  shift, and go to state 10

    ident  go to state 38
    vars   go to state 61
    var    go to state 58


State 36

   21 statement: WRITE . vars

    IDENT  shift, and go to state 10

    ident  go to state 38
    vars   go to state 62
    var    go to state 58


State 37

   23 statement: RETURN . expression

    L_PAREN  shift, and go to state 63
    SUB      shift, and go to state 47
    IDENT    shift, and go to state 10
    NUMBER   shift, and go to state 48

    ident                      go to state 49
    expression                 go to state 64
    multiplicative_expression  go to state 54
    term                       go to state 55
    var                        go to state 56


State 38

   59 var: ident .
   60    | ident . L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 65

    $default  reduce using rule 59 (var)


State 39

    3 function: FUNCTION FuncIdent SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements . END_BODY

    END_BODY  shift, and go to state 66


State 40

   12 statements: statement . SEMICOLON
   13           | statement . SEMICOLON statements

    SEMICOLON  shift, and go to state 67


State 41

   14 statement: var . ASSIGN expression

    ASSIGN  shift, and go to state 68


State 42

    7 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF . INTEGER

    INTEGER  shift, and go to state 69


State 43

   29 relation_exp: NOT . expression comp expression
   31             | NOT . TRUE
   33             | NOT . FALSE

    TRUE     shift, and go to state 70
    FALSE    shift, and go to state 71
    L_PAREN  shift, and go to state 63
    SUB      shift, and go to state 47
    IDENT    shift, and go to state 10
    NUMBER   shift, and go to state 48

    ident                      go to state 49
    expression                 go to state 72
    multiplicative_expression  go to state 54
    term                       go to state 55
    var                        go to state 56


State 44

   30 relation_exp: TRUE .

    $default  reduce using rule 30 (relation_exp)


State 45

   32 relation_exp: FALSE .

    $default  reduce using rule 32 (relation_exp)


State 46

   34 relation_exp: L_PAREN . bool_exp R_PAREN
   54 term: L_PAREN . expression R_PAREN

    NOT      shift, and go to state 43
    TRUE     shift, and go to state 44
    FALSE    shift, and go to state 45
    L_PAREN  shift, and go to state 46
    SUB      shift, and go to state 47
    IDENT    shift, and go to state 10
    NUMBER   shift, and go to state 48

    ident                      go to state 49
    bool_exp                   go to state 73
    relation_and_exp           go to state 51
    relation_exp               go to state 52
    expression                 go to state 74
    multiplicative_expression  go to state 54
    term                       go to state 55
    var                        go to state 56


State 47

   51 term: SUB . var
   53     | SUB . NUMBER
   55     | SUB . L_PAREN expression R_PAREN

    L_PAREN  shift, and go to state 75
    IDENT    shift, and go to state 10
    NUMBER   shift, and go to state 76

    ident  go to state 38
    var    go to state 77


State 48

   52 term: NUMBER .

    $default  reduce using rule 52 (term)


State 49

   56 term: ident . L_PAREN expressions R_PAREN
   59 var: ident .
   60    | ident . L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_PAREN           shift, and go to state 78
    L_SQUARE_BRACKET  shift, and go to state 65

    $default  reduce using rule 59 (var)


State 50

   15 statement: IF bool_exp . THEN statements ENDIF
   16          | IF bool_exp . THEN statements ELSE statements ENDIF

    THEN  shift, and go to state 79


State 51

   24 bool_exp: relation_and_exp .
   25         | relation_and_exp . OR bool_exp

    OR  shift, and go to state 80

    $default  reduce using rule 24 (bool_exp)


State 52

   26 relation_and_exp: relation_exp .
   27                 | relation_exp . AND relation_and_exp

    AND  shift, and go to state 81

    $default  reduce using rule 26 (relation_and_exp)


State 53

   28 relation_exp: expression . comp expression

    LT   shift, and go to state 82
    LTE  shift, and go to state 83
    GT   shift, and go to state 84
    GTE  shift, and go to state 85
    EQ   shift, and go to state 86
    NEQ  shift, and go to state 87

    comp  go to state 88


State 54

   43 expression: multiplicative_expression .
   44           | multiplicative_expression . ADD expression
   45           | multiplicative_expression . SUB expression

    ADD  shift, and go to state 89
    SUB  shift, and go to state 90

    $default  reduce using rule 43 (expression)


State 55

   46 multiplicative_expression: term .
   47                          | term . MULT multiplicative_expression
   48                          | term . DIV multiplicative_expression
   49                          | term . MOD multiplicative_expression

    MULT  shift, and go to state 91
    DIV   shift, and go to state 92
    MOD   shift, and go to state 93

    $default  reduce using rule 46 (multiplicative_expression)


State 56

   50 term: var .

    $default  reduce using rule 50 (term)


State 57

   19 statement: FOR vars . ASSIGN NUMBER SEMICOLON bool_exp SEMICOLON vars ASSIGN expression BEGINLOOP statements ENDLOOP

    ASSIGN  shift, and go to state 94


State 58

   57 vars: var .
   58     | var . COMMA vars

    COMMA  shift, and go to state 95

    $default  reduce using rule 57 (vars)


State 59

   17 statement: WHILE bool_exp . BEGINLOOP statements ENDLOOP

    BEGINLOOP  shift, and go to state 96


State 60

   18 statement: DO BEGINLOOP . statements ENDLOOP WHILE bool_exp

    IF        shift, and go to state 30
    FOR       shift, and go to state 31
    WHILE     shift, and go to state 32
    DO        shift, and go to state 33
    CONTINUE  shift, and go to state 34
    READ      shift, and go to state 35
    WRITE     shift, and go to state 36
    RETURN    shift, and go to state 37
    IDENT     shift, and go to state 10

    ident       go to state 38
    statements  go to state 97
    statement   go to state 40
    var         go to state 41


State 61

   20 statement: READ vars .

    $default  reduce using rule 20 (statement)


State 62

   21 statement: WRITE vars .

    $default  reduce using rule 21 (statement)


State 63

   54 term: L_PAREN . expression R_PAREN

    L_PAREN  shift, and go to state 63
    SUB      shift, and go to state 47
    IDENT    shift, and go to state 10
    NUMBER   shift, and go to state 48

    ident                      go to state 49
    expression                 go to state 98
    multiplicative_expression  go to state 54
    term                       go to state 55
    var                        go to state 56


State 64

   23 statement: RETURN expression .

    $default  reduce using rule 23 (statement)


State 65

   60 var: ident L_SQUARE_BRACKET . expression R_SQUARE_BRACKET

    L_PAREN  shift, and go to state 63
    SUB      shift, and go to state 47
    IDENT    shift, and go to state 10
    NUMBER   shift, and go to state 48

    ident                      go to state 49
    expression                 go to state 99
    multiplicative_expression  go to state 54
    term                       go to state 55
    var                        go to state 56


State 66

    3 function: FUNCTION FuncIdent SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY .

    $default  reduce using rule 3 (function)


State 67

   12 statements: statement SEMICOLON .
   13           | statement SEMICOLON . statements

    IF        shift, and go to state 30
    FOR       shift, and go to state 31
    WHILE     shift, and go to state 32
    DO        shift, and go to state 33
    CONTINUE  shift, and go to state 34
    READ      shift, and go to state 35
    WRITE     shift, and go to state 36
    RETURN    shift, and go to state 37
    IDENT     shift, and go to state 10

    $default  reduce using rule 12 (statements)

    ident       go to state 38
    statements  go to state 100
    statement   go to state 40
    var         go to state 41


State 68

   14 statement: var ASSIGN . expression

    L_PAREN  shift, and go to state 63
    SUB      shift, and go to state 47
    IDENT    shift, and go to state 10
    NUMBER   shift, and go to state 48

    ident                      go to state 49
    expression                 go to state 101
    multiplicative_expression  go to state 54
    term                       go to state 55
    var                        go to state 56


State 69

    7 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER .

    $default  reduce using rule 7 (declaration)


State 70

   31 relation_exp: NOT TRUE .

    $default  reduce using rule 31 (relation_exp)


State 71

   33 relation_exp: NOT FALSE .

    $default  reduce using rule 33 (relation_exp)


State 72

   29 relation_exp: NOT expression . comp expression

    LT   shift, and go to state 82
    LTE  shift, and go to state 83
    GT   shift, and go to state 84
    GTE  shift, and go to state 85
    EQ   shift, and go to state 86
    NEQ  shift, and go to state 87

    comp  go to state 102


State 73

   34 relation_exp: L_PAREN bool_exp . R_PAREN

    R_PAREN  shift, and go to state 103


State 74

   28 relation_exp: expression . comp expression
   54 term: L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 104
    LT       shift, and go to state 82
    LTE      shift, and go to state 83
    GT       shift, and go to state 84
    GTE      shift, and go to state 85
    EQ       shift, and go to state 86
    NEQ      shift, and go to state 87

    comp  go to state 88


State 75

   55 term: SUB L_PAREN . expression R_PAREN

    L_PAREN  shift, and go to state 63
    SUB      shift, and go to state 47
    IDENT    shift, and go to state 10
    NUMBER   shift, and go to state 48

    ident                      go to state 49
    expression                 go to state 105
    multiplicative_expression  go to state 54
    term                       go to state 55
    var                        go to state 56


State 76

   53 term: SUB NUMBER .

    $default  reduce using rule 53 (term)


State 77

   51 term: SUB var .

    $default  reduce using rule 51 (term)


State 78

   56 term: ident L_PAREN . expressions R_PAREN

    L_PAREN  shift, and go to state 63
    SUB      shift, and go to state 47
    IDENT    shift, and go to state 10
    NUMBER   shift, and go to state 48

    ident                      go to state 49
    expressions                go to state 106
    expression                 go to state 107
    multiplicative_expression  go to state 54
    term                       go to state 55
    var                        go to state 56


State 79

   15 statement: IF bool_exp THEN . statements ENDIF
   16          | IF bool_exp THEN . statements ELSE statements ENDIF

    IF        shift, and go to state 30
    FOR       shift, and go to state 31
    WHILE     shift, and go to state 32
    DO        shift, and go to state 33
    CONTINUE  shift, and go to state 34
    READ      shift, and go to state 35
    WRITE     shift, and go to state 36
    RETURN    shift, and go to state 37
    IDENT     shift, and go to state 10

    ident       go to state 38
    statements  go to state 108
    statement   go to state 40
    var         go to state 41


State 80

   25 bool_exp: relation_and_exp OR . bool_exp

    NOT      shift, and go to state 43
    TRUE     shift, and go to state 44
    FALSE    shift, and go to state 45
    L_PAREN  shift, and go to state 46
    SUB      shift, and go to state 47
    IDENT    shift, and go to state 10
    NUMBER   shift, and go to state 48

    ident                      go to state 49
    bool_exp                   go to state 109
    relation_and_exp           go to state 51
    relation_exp               go to state 52
    expression                 go to state 53
    multiplicative_expression  go to state 54
    term                       go to state 55
    var                        go to state 56


State 81

   27 relation_and_exp: relation_exp AND . relation_and_exp

    NOT      shift, and go to state 43
    TRUE     shift, and go to state 44
    FALSE    shift, and go to state 45
    L_PAREN  shift, and go to state 46
    SUB      shift, and go to state 47
    IDENT    shift, and go to state 10
    NUMBER   shift, and go to state 48

    ident                      go to state 49
    relation_and_exp           go to state 110
    relation_exp               go to state 52
    expression                 go to state 53
    multiplicative_expression  go to state 54
    term                       go to state 55
    var                        go to state 56


State 82

   37 comp: LT .

    $default  reduce using rule 37 (comp)


State 83

   39 comp: LTE .

    $default  reduce using rule 39 (comp)


State 84

   38 comp: GT .

    $default  reduce using rule 38 (comp)


State 85

   40 comp: GTE .

    $default  reduce using rule 40 (comp)


State 86

   35 comp: EQ .

    $default  reduce using rule 35 (comp)


State 87

   36 comp: NEQ .

    $default  reduce using rule 36 (comp)


State 88

   28 relation_exp: expression comp . expression

    L_PAREN  shift, and go to state 63
    SUB      shift, and go to state 47
    IDENT    shift, and go to state 10
    NUMBER   shift, and go to state 48

    ident                      go to state 49
    expression                 go to state 111
    multiplicative_expression  go to state 54
    term                       go to state 55
    var                        go to state 56


State 89

   44 expression: multiplicative_expression ADD . expression

    L_PAREN  shift, and go to state 63
    SUB      shift, and go to state 47
    IDENT    shift, and go to state 10
    NUMBER   shift, and go to state 48

    ident                      go to state 49
    expression                 go to state 112
    multiplicative_expression  go to state 54
    term                       go to state 55
    var                        go to state 56


State 90

   45 expression: multiplicative_expression SUB . expression

    L_PAREN  shift, and go to state 63
    SUB      shift, and go to state 47
    IDENT    shift, and go to state 10
    NUMBER   shift, and go to state 48

    ident                      go to state 49
    expression                 go to state 113
    multiplicative_expression  go to state 54
    term                       go to state 55
    var                        go to state 56


State 91

   47 multiplicative_expression: term MULT . multiplicative_expression

    L_PAREN  shift, and go to state 63
    SUB      shift, and go to state 47
    IDENT    shift, and go to state 10
    NUMBER   shift, and go to state 48

    ident                      go to state 49
    multiplicative_expression  go to state 114
    term                       go to state 55
    var                        go to state 56


State 92

   48 multiplicative_expression: term DIV . multiplicative_expression

    L_PAREN  shift, and go to state 63
    SUB      shift, and go to state 47
    IDENT    shift, and go to state 10
    NUMBER   shift, and go to state 48

    ident                      go to state 49
    multiplicative_expression  go to state 115
    term                       go to state 55
    var                        go to state 56


State 93

   49 multiplicative_expression: term MOD . multiplicative_expression

    L_PAREN  shift, and go to state 63
    SUB      shift, and go to state 47
    IDENT    shift, and go to state 10
    NUMBER   shift, and go to state 48

    ident                      go to state 49
    multiplicative_expression  go to state 116
    term                       go to state 55
    var                        go to state 56


State 94

   19 statement: FOR vars ASSIGN . NUMBER SEMICOLON bool_exp SEMICOLON vars ASSIGN expression BEGINLOOP statements ENDLOOP

    NUMBER  shift, and go to state 117


State 95

   58 vars: var COMMA . vars

    IDENT  shift, and go to state 10

    ident  go to state 38
    vars   go to state 118
    var    go to state 58


State 96

   17 statement: WHILE bool_exp BEGINLOOP . statements ENDLOOP

    IF        shift, and go to state 30
    FOR       shift, and go to state 31
    WHILE     shift, and go to state 32
    DO        shift, and go to state 33
    CONTINUE  shift, and go to state 34
    READ      shift, and go to state 35
    WRITE     shift, and go to state 36
    RETURN    shift, and go to state 37
    IDENT     shift, and go to state 10

    ident       go to state 38
    statements  go to state 119
    statement   go to state 40
    var         go to state 41


State 97

   18 statement: DO BEGINLOOP statements . ENDLOOP WHILE bool_exp

    ENDLOOP  shift, and go to state 120


State 98

   54 term: L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 104


State 99

   60 var: ident L_SQUARE_BRACKET expression . R_SQUARE_BRACKET

    R_SQUARE_BRACKET  shift, and go to state 121


State 100

   13 statements: statement SEMICOLON statements .

    $default  reduce using rule 13 (statements)


State 101

   14 statement: var ASSIGN expression .

    $default  reduce using rule 14 (statement)


State 102

   29 relation_exp: NOT expression comp . expression

    L_PAREN  shift, and go to state 63
    SUB      shift, and go to state 47
    IDENT    shift, and go to state 10
    NUMBER   shift, and go to state 48

    ident                      go to state 49
    expression                 go to state 122
    multiplicative_expression  go to state 54
    term                       go to state 55
    var                        go to state 56


State 103

   34 relation_exp: L_PAREN bool_exp R_PAREN .

    $default  reduce using rule 34 (relation_exp)


State 104

   54 term: L_PAREN expression R_PAREN .

    $default  reduce using rule 54 (term)


State 105

   55 term: SUB L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 123


State 106

   56 term: ident L_PAREN expressions . R_PAREN

    R_PAREN  shift, and go to state 124


State 107

   41 expressions: expression .
   42            | expression . COMMA expressions

    COMMA  shift, and go to state 125

    $default  reduce using rule 41 (expressions)


State 108

   15 statement: IF bool_exp THEN statements . ENDIF
   16          | IF bool_exp THEN statements . ELSE statements ENDIF

    ENDIF  shift, and go to state 126
    ELSE   shift, and go to state 127


State 109

   25 bool_exp: relation_and_exp OR bool_exp .

    $default  reduce using rule 25 (bool_exp)


State 110

   27 relation_and_exp: relation_exp AND relation_and_exp .

    $default  reduce using rule 27 (relation_and_exp)


State 111

   28 relation_exp: expression comp expression .

    $default  reduce using rule 28 (relation_exp)


State 112

   44 expression: multiplicative_expression ADD expression .

    $default  reduce using rule 44 (expression)


State 113

   45 expression: multiplicative_expression SUB expression .

    $default  reduce using rule 45 (expression)


State 114

   47 multiplicative_expression: term MULT multiplicative_expression .

    $default  reduce using rule 47 (multiplicative_expression)


State 115

   48 multiplicative_expression: term DIV multiplicative_expression .

    $default  reduce using rule 48 (multiplicative_expression)


State 116

   49 multiplicative_expression: term MOD multiplicative_expression .

    $default  reduce using rule 49 (multiplicative_expression)


State 117

   19 statement: FOR vars ASSIGN NUMBER . SEMICOLON bool_exp SEMICOLON vars ASSIGN expression BEGINLOOP statements ENDLOOP

    SEMICOLON  shift, and go to state 128


State 118

   58 vars: var COMMA vars .

    $default  reduce using rule 58 (vars)


State 119

   17 statement: WHILE bool_exp BEGINLOOP statements . ENDLOOP

    ENDLOOP  shift, and go to state 129


State 120

   18 statement: DO BEGINLOOP statements ENDLOOP . WHILE bool_exp

    WHILE  shift, and go to state 130


State 121

   60 var: ident L_SQUARE_BRACKET expression R_SQUARE_BRACKET .

    $default  reduce using rule 60 (var)


State 122

   29 relation_exp: NOT expression comp expression .

    $default  reduce using rule 29 (relation_exp)


State 123

   55 term: SUB L_PAREN expression R_PAREN .

    $default  reduce using rule 55 (term)


State 124

   56 term: ident L_PAREN expressions R_PAREN .

    $default  reduce using rule 56 (term)


State 125

   42 expressions: expression COMMA . expressions

    L_PAREN  shift, and go to state 63
    SUB      shift, and go to state 47
    IDENT    shift, and go to state 10
    NUMBER   shift, and go to state 48

    ident                      go to state 49
    expressions                go to state 131
    expression                 go to state 107
    multiplicative_expression  go to state 54
    term                       go to state 55
    var                        go to state 56


State 126

   15 statement: IF bool_exp THEN statements ENDIF .

    $default  reduce using rule 15 (statement)


State 127

   16 statement: IF bool_exp THEN statements ELSE . statements ENDIF

    IF        shift, and go to state 30
    FOR       shift, and go to state 31
    WHILE     shift, and go to state 32
    DO        shift, and go to state 33
    CONTINUE  shift, and go to state 34
    READ      shift, and go to state 35
    WRITE     shift, and go to state 36
    RETURN    shift, and go to state 37
    IDENT     shift, and go to state 10

    ident       go to state 38
    statements  go to state 132
    statement   go to state 40
    var         go to state 41


State 128

   19 statement: FOR vars ASSIGN NUMBER SEMICOLON . bool_exp SEMICOLON vars ASSIGN expression BEGINLOOP statements ENDLOOP

    NOT      shift, and go to state 43
    TRUE     shift, and go to state 44
    FALSE    shift, and go to state 45
    L_PAREN  shift, and go to state 46
    SUB      shift, and go to state 47
    IDENT    shift, and go to state 10
    NUMBER   shift, and go to state 48

    ident                      go to state 49
    bool_exp                   go to state 133
    relation_and_exp           go to state 51
    relation_exp               go to state 52
    expression                 go to state 53
    multiplicative_expression  go to state 54
    term                       go to state 55
    var                        go to state 56


State 129

   17 statement: WHILE bool_exp BEGINLOOP statements ENDLOOP .

    $default  reduce using rule 17 (statement)


State 130

   18 statement: DO BEGINLOOP statements ENDLOOP WHILE . bool_exp

    NOT      shift, and go to state 43
    TRUE     shift, and go to state 44
    FALSE    shift, and go to state 45
    L_PAREN  shift, and go to state 46
    SUB      shift, and go to state 47
    IDENT    shift, and go to state 10
    NUMBER   shift, and go to state 48

    ident                      go to state 49
    bool_exp                   go to state 134
    relation_and_exp           go to state 51
    relation_exp               go to state 52
    expression                 go to state 53
    multiplicative_expression  go to state 54
    term                       go to state 55
    var                        go to state 56


State 131

   42 expressions: expression COMMA expressions .

    $default  reduce using rule 42 (expressions)


State 132

   16 statement: IF bool_exp THEN statements ELSE statements . ENDIF

    ENDIF  shift, and go to state 135


State 133

   19 statement: FOR vars ASSIGN NUMBER SEMICOLON bool_exp . SEMICOLON vars ASSIGN expression BEGINLOOP statements ENDLOOP

    SEMICOLON  shift, and go to state 136


State 134

   18 statement: DO BEGINLOOP statements ENDLOOP WHILE bool_exp .

    $default  reduce using rule 18 (statement)


State 135

   16 statement: IF bool_exp THEN statements ELSE statements ENDIF .

    $default  reduce using rule 16 (statement)


State 136

   19 statement: FOR vars ASSIGN NUMBER SEMICOLON bool_exp SEMICOLON . vars ASSIGN expression BEGINLOOP statements ENDLOOP

    IDENT  shift, and go to state 10

    ident  go to state 38
    vars   go to state 137
    var    go to state 58


State 137

   19 statement: FOR vars ASSIGN NUMBER SEMICOLON bool_exp SEMICOLON vars . ASSIGN expression BEGINLOOP statements ENDLOOP

    ASSIGN  shift, and go to state 138


State 138

   19 statement: FOR vars ASSIGN NUMBER SEMICOLON bool_exp SEMICOLON vars ASSIGN . expression BEGINLOOP statements ENDLOOP

    L_PAREN  shift, and go to state 63
    SUB      shift, and go to state 47
    IDENT    shift, and go to state 10
    NUMBER   shift, and go to state 48

    ident                      go to state 49
    expression                 go to state 139
    multiplicative_expression  go to state 54
    term                       go to state 55
    var                        go to state 56


State 139

   19 statement: FOR vars ASSIGN NUMBER SEMICOLON bool_exp SEMICOLON vars ASSIGN expression . BEGINLOOP statements ENDLOOP

    BEGINLOOP  shift, and go to state 140


State 140

   19 statement: FOR vars ASSIGN NUMBER SEMICOLON bool_exp SEMICOLON vars ASSIGN expression BEGINLOOP . statements ENDLOOP

    IF        shift, and go to state 30
    FOR       shift, and go to state 31
    WHILE     shift, and go to state 32
    DO        shift, and go to state 33
    CONTINUE  shift, and go to state 34
    READ      shift, and go to state 35
    WRITE     shift, and go to state 36
    RETURN    shift, and go to state 37
    IDENT     shift, and go to state 10

    ident       go to state 38
    statements  go to state 141
    statement   go to state 40
    var         go to state 41


State 141

   19 statement: FOR vars ASSIGN NUMBER SEMICOLON bool_exp SEMICOLON vars ASSIGN expression BEGINLOOP statements . ENDLOOP

    ENDLOOP  shift, and go to state 142


State 142

   19 statement: FOR vars ASSIGN NUMBER SEMICOLON bool_exp SEMICOLON vars ASSIGN expression BEGINLOOP statements ENDLOOP .

    $default  reduce using rule 19 (statement)
